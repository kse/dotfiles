" All system-wide defaults are set in $VIMRUNTIME/archlinux.vim (usually just
" /usr/share/vim/vimfiles/archlinux.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vimrc), since archlinux.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to
" make changes after sourcing archlinux.vim since it alters the value of the
" 'compatible' option.  
" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages.
runtime! archlinux.vim

let g:CoqIDEDefaultKeyMap = 1

filetype off
call pathogen#infect()
call pathogen#helptags()
call pathogen#incubate()
map <silent> <C-n> :NERDTreeToggle<CR>

" If you prefer the old-style vim functionalty, add 'runtime! vimrc_example.vim'
" Or better yet, read /usr/share/vim/vim72/vimrc_example.vim or the vim manual
" and configure vim to your own liking!

set nocompatible

if has("syntax")
  syntax on
endif

if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
if has("autocmd")
  filetype plugin indent on
endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
set showcmd		    " Show (partial) command in status line.
set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
"set autowrite		" Automatically save before commands like :next and :make
"set hidden         " Hide buffers when they are abandoned
set mouse=		    " Disable mouse usage
set hlsearch		" Enable search highlighting
set autoindent		" Enable automatic indentation
set foldmethod=marker

set sw=4
set ts=4
set scrolloff=3
set incsearch
set smartcase
set ruler

set backspace=indent,eol,start

filetype on
filetype plugin on

nmap <silent> <leader>s :set nolist!<CR>

nnoremap ' `
nnoremap ` '

" Automatically add some boilerplate code when creating a new file.
if has("autocmd")
    augroup content
        autocmd!

        autocmd BufNewFile *.pl 0put ='# vim: set sw=4 sts=4 :' |
                    \ 0put ='#!/usr/bin/env perl' | set sw=4 sts=4  |
					\ 1put ='use warnings;' |
					\ 2put ='use strict;' |
                    \ norm G

        autocmd BufNewFile *.pm 0put ='package *' | set sw=4 sts=4  |
					\ 1put ='use warnings;' |
					\ 2put ='use strict;' |
					\ 3put ='' |
					\ 4put ='1;' |
					\ norm 1GA
 
    augroup END
endif

" Easypaste
set pastetoggle=<F11>

"Make vim set the title of the window
set title

"Remap tab to move between windows
"map <Space> <c-W>w
map <silent> <Tab> :tabnext<CR>
map <silent> <S-Tab> :tabprev<CR>

let g:C_Ctrl_j = 'off'
"Map C - hjkl to move between windows
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Use the damn hjkl keys
"map <up> <nop>
"map <down> <nop>
"map <left> <nop>
"map <right> <nop>
"imap <up> <nop>
"imap <down> <nop>
"imap <left> <nop>
"imap <right> <nop>

"map <S-PageDown> tabn<cr>
"map <S-PageUp> tabp<cr>

"if has("autocmd")
"	autocmd Filetype scm vmap :'<,'>w !petite <S-r>
"endif 

vnoremap < <gv
vnoremap > >gv

set background=dark

let Tlist_Ctags_Cmd = "/usr/bin/ctags"
let Tlist_WinWidth = 30
map <F4> :TlistToggle<cr>

map <C-g>a ggVG

set grepprg=grep\ -nH\ $*
let g:tex_flavor = "latex"

set cc=80

syn match ErrorLeadSpace /^ \+/      " highlight any leading spaces
syn match ErrorTailSpace / \+$/      " highlight any trailing spaces
syn match Error80        /\%>80v.\+/ " highlight anything past 80

hi Error80 ctermbg=red
hi ErrorLeadSpace ctermbg=red
hi ErrorTailSpace ctermbg=red

if ! has("gui_running") 
	set t_Co=256 
endif 
" feel free to choose :set background=light for a different style 

"filetype off                                                                  
"filetype plugin indent off                                                    
"set runtimepath+=$GOROOT/misc/vim                                             
"filetype plugin indent on                                                     
"syntax on                                                                     
"

colors peaksea 
hi ColorColumn ctermbg=black guibg=gray28
"hi ColorColumn ctermbg=lightblue guibg=lightblue

"if has("autocmd")
"	autocmd InsertEnter * :set number
"	autocmd InsertLeave * :set relativenumber
"endif

function! NumberToggle()
	let [&nu, &rnu] = [!&rnu, &nu+&rnu==1]
endfunc

nnoremap <silent> <C-m> :call NumberToggle()<cr>
set relativenumber
set number

let mapleader="-"
nnoremap <Leader>q :q<CR>
nnoremap <Leader>Q :qall<CR>

nnoremap <Leader>h <C-w>h<CR>
nnoremap <Leader>j <C-w>jh<CR>
nnoremap <Leader>k <C-w>kh<CR>
nnoremap <Leader>l <C-w>lh<CR>
nnoremap <Leader>H <C-w>Hh<CR>
nnoremap <Leader>J <C-w>Jh<CR>
nnoremap <Leader>K <C-w>Kh<CR>
nnoremap <Leader>L <C-w>Lh<CR>

nnoremap <Leader>< 2<C-w><
nnoremap <Leader>> 2<C-w>>
nnoremap <Leader>, 2<C-w>-
nnoremap <Leader>. 2<C-w>+

let g:airline_powerline_fonts = 1
set laststatus=2
set noshowmode
let g:airline#extensions#tabline#enabled = 1
set ttimeoutlen=100

if filereadable(".vim.custom")
	so .vim.custom
endif

let g:gitgutter_enabled = 1
highlight clear SignColumn

let g:syntastic_cpp_compiler_options = '-std=c++11'
